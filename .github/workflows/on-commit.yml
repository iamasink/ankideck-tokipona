name: Build and Release

on:
  push:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Update submodules to latest
      - name: Git Submodule Update
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      # - name: svg2png.py
      #   run: python svg2png.py

      - name: Build APKG
        run: python app.py -f #force build


      # - name: git add
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git add .


      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: update generated files"
            git push
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        id: bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          TAG_PREFIX: "v"
          DEFAULT_BUMP: minor

    

      # Create Release only when changes were committed
      - name: Create Release
        run: |
          tag="${{ steps.bump.outputs.new_tag }}"
          echo "Creating release $tag"
          gh release create $tag \
            ./generated/*.apkg \
            --title "Release $tag" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
